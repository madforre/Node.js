npm

    Node Package Manager

require()

    node.js에서는 모듈을 불러오기 위해 require()함수를 사용한다.
    require()함수는 module.exports를 리턴한다.

exports와 module.exports의 차이

    exports는 단순히 module.exports를 참조한다. 짧은 alias일 뿐입니다.
    module.exports와 exports는 같은 객체를 바라보고 있으며, exports는 (공식 문서대로 말하자면) module.exports의 shortcut이다.

Assertion Testing (Assert API)

    Assert는 유닛 테스트를 위해서 Node.js에서 사용할 수 있는 테스트 모듈이다.

BDD vs TDD

    BDD와 TDD는 거의 차이가 없다. 차이가 있다면 TDD는 테스트 자체에 집중하여 개발하는 반면, BDD는 비즈니스 요구사항에 집중하여 테스트 케이스를 개발한다는 것이다. 

    * BDD : Behaviour-Driven Development

        간략하게 설명하자면 BDD는 테스트 케이스를 작성함에 있어서 좀 더 자연어에 가깝게 작성한다는 것이다.
        만들어진 시나리오를 바탕으로 유닛테스트를 작성하면 그것이 바로 BDD를 적용한 소프트웨어 개발이 될 것이다. 

    * TDD : Test-Driven Development

    Mocha.js

        모카는 테스트 코드를 실행해주는 테스트 러너이다.

            descirbe(): 테스트 꾸러미(Test Suite)라고 하며 테스트 환경을 기술함
            it(): 테스트 케이스(Test Case)라고 하며 단위 테스트를 정의함

            유닛 테스트는 보통 세 단계로 나뉜다.

                가지런히 준비(arrange) -> 실행(act) -> 검증, 표명(assert)

    Should.js

        BDD style assertions for node.js
        유닛 테스트를 도와주는 BDD assertions.

노드 기본 모듈 목록

    자주 사용하는 것만 짚어 보자

        Console: 콘솔 로깅
        Crypto: 암호화
        Events: 이벤트 관리
        File System: 파일 관리
        Http: 네트웍 기능
        OS: 운영체제 정보
        Path: 경로 관리
        Stream: 스트림 관리

    http 기본 모듈

        네트워크 기술을 구현한 Node.js의 기본 모듈이다.
        네트워크 기능을 제공한다.

        http.createServer(): 서버 인스턴스를 만들어 반환
        http.server: 서버 클래스
        server.listen(): 서버를 클라이언트 요청 대기 상태(listen)로 만듬

        * curl hostname:port -v 명령어

            curl을 이용하여 서버에 요청, 응답 정보를 확인할 수 있다.
            -v 옵션을 추가하면 curl 요청을 보낼 때 http 헤더까지 볼 수 있다.

            > 문자로 시작하면 요청 정보이고 
            < 문자로 시작하면 응답 정보이다.